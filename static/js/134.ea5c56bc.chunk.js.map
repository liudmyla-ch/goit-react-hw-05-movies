{"version":3,"file":"static/js/134.ea5c56bc.chunk.js","mappings":"6LAmEA,UA/DgB,WACd,OAAoCA,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAIAC,EAAAA,EAAAA,YAAU,WACR,GAAIF,EAAaG,IAAI,SAAU,CAC7B,IAAMC,EAAQJ,EAAaK,IAAI,SAC/BC,MAAM,2GAAD,OACwGF,EADxG,gCAEHG,MAAK,SAAAC,GAAG,OACRA,EAAIC,OAAOF,MAAK,SAAAG,GACdZ,EAAgBY,EAAKC,QACtB,GAHO,GAKX,CACF,GAAE,CAACX,IAEJ,IAKMY,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iCACE,kBAAMC,SATa,SAAAC,GACrBA,EAAIC,iBACJf,EAAgB,CAAEG,MAAOT,GAC1B,EAMG,WACE,kBACEsB,KAAK,SACLC,SAAU,SAAAH,GAAG,OAAInB,EAAcmB,EAAII,OAAOC,MAA7B,KAEf,mBAAQH,KAAK,SAAb,uBAEDpB,EAAawB,OAAS,IACrB,wBACGxB,EAAayB,KAAI,SAAAC,GAChB,IAAQC,EAAoBD,EAApBC,GAAIC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KACnB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMjB,GAA1C,SACGa,GAASC,KAFLF,EAMZ,OAGL,SAAC,KAAD,MAGL,C","sources":["pages/Movies.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation, Outlet } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n const Movies = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [searchResult, setSearchResult] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  \n\n  useEffect(() => {\n    if (searchParams.has('query')) {\n      const query = searchParams.get('query');\n      fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=730d0afac1800da4f45c404259e14f12&language=en-US&query=${query}&page=1&include_adult=false`\n      ).then(res =>\n        res.json().then(data => {\n          setSearchResult(data.results);\n        })\n      );\n    }\n  }, [searchParams]);\n\n  const onSubmitSearch = evt => {\n    evt.preventDefault();\n    setSearchParams({ query: inputValue });\n  };\n\n  const location = useLocation();\n\n  return (\n    <>\n      <form onSubmit={onSubmitSearch}>\n        <input\n          type=\"search\"\n          onChange={evt => setInputValue(evt.target.value)}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {searchResult.length > 0 && (\n        <ul>\n          {searchResult.map(item => {\n            const { id, title, name } = item;\n            return (\n              <li key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  {title || name}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n      <Outlet/>\n    </>\n  );\n};\n\nMovies.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      movieId: PropTypes.string,\n    }),\n  }),\n};\n\nexport default Movies;\n"],"names":["useState","inputValue","setInputValue","searchResult","setSearchResult","useSearchParams","searchParams","setSearchParams","useEffect","has","query","get","fetch","then","res","json","data","results","location","useLocation","onSubmit","evt","preventDefault","type","onChange","target","value","length","map","item","id","title","name","to","state","from"],"sourceRoot":""}