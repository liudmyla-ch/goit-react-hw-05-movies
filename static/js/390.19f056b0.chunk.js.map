{"version":3,"file":"static/js/390.19f056b0.chunk.js","mappings":"6IAuDA,UAnDc,WACZ,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACRC,MAAM,sCAAD,OACmCN,EADnC,qEAEHO,MAAK,SAAAC,GAAG,OACRA,EAAIC,OAAOF,MAAK,SAAAG,GACdN,EAAYM,EAAKC,KAClB,GAHO,GAKX,GAAE,CAACX,KAEF,gCACG,IACoB,IAApBG,EAASS,SAAgB,oDACzBT,IACC,wBACGA,EAASU,KAAI,SAAAC,GACZ,IAAQC,EAAsCD,EAAtCC,UAAWC,EAA2BF,EAA3BE,KAAMC,EAAqBH,EAArBG,aAAcC,EAAOJ,EAAPI,GACvC,OACE,0BACGD,GACC,gBACEE,IAAG,0CAAqCF,GACxCG,IAAKJ,EACLK,MAAM,WAGR,gBACEF,IAAI,mHACJC,IAAI,MACJC,MAAM,WAGV,uBAAIL,KACJ,uCAAeD,OAfRG,EAkBZ,QAKV,C","sources":["components/cast/Cast.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\n const Cast = () => {\n  const { movieId } = useParams();\n  const [castInfo, setCastInfo] = useState([]);\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=730d0afac1800da4f45c404259e14f12&language=en-US`\n    ).then(res =>\n      res.json().then(data => {\n        setCastInfo(data.cast);\n      })\n    );\n  }, [movieId]);\n  return (\n    <>\n      {' '}\n      {castInfo.length === 0 && <p>There is nothing to view</p>}\n      {castInfo && (\n        <ul>\n          {castInfo.map(item => {\n            const { character, name, profile_path, id } = item;\n            return (\n              <li key={id}>\n                {profile_path ? (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n                    alt={name}\n                    width=\"200px\"\n                  />\n                ) : (\n                  <img\n                    src=\"https://img.freepik.com/free-vector/oops-404-error-with-broken-robot-concept-illustration_114360-5529.jpg?w=2000\"\n                    alt=\"404\"\n                    width=\"200px\"\n                  />\n                )}\n                <p>{name}</p>\n                <p>Character: {character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nCast.propTypes = {\n  movieId: PropTypes.string,\n}\n\nexport default Cast;\n"],"names":["movieId","useParams","useState","castInfo","setCastInfo","useEffect","fetch","then","res","json","data","cast","length","map","item","character","name","profile_path","id","src","alt","width"],"sourceRoot":""}