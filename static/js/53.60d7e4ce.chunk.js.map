{"version":3,"file":"static/js/53.60d7e4ce.chunk.js","mappings":"wMAEaA,EAAeC,EAAAA,GAAAA,IAAH,8FAMZC,EAAMD,EAAAA,GAAAA,IAAH,yCAGHE,EAAoBF,EAAAA,GAAAA,IAAH,+F,SC6F9B,EAnGqB,WAAO,IAAD,IACjBG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,EAQID,GAAS,GAPXE,EADF,EACEA,MACAC,EAFF,EAEEA,KACAC,EAHF,EAGEA,aACAC,EAJF,EAIEA,aACAC,EALF,EAKEA,SACAC,EANF,EAMEA,YACAC,EAPF,EAOEA,OAGIC,GAAWC,EAAAA,EAAAA,MAkBjB,OAhBAC,EAAAA,EAAAA,YAAU,WACRC,MAAM,sCAAD,OACmCf,EADnC,6DAGFgB,MAAK,SAAAC,GACJ,IAAKA,EAAIC,GAEP,MADAd,EAAS,cACH,IAAIe,MAAMF,EAAIG,QAEtB,OAAOH,EAAII,MACZ,IACAL,MAAK,SAAAM,GACJlB,EAASkB,EACV,GACJ,GAAE,CAACtB,KAGF,iCACE,SAAC,KAAD,CAAMuB,GAAE,oBAAEX,EAASY,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAlC,UACE,0CAES,eAAVtB,IACC,SAACL,EAAD,CACE4B,IAAI,mHACJC,IAAI,MACJC,MAAM,UAGTzB,GAAmB,eAAVA,IACR,iCACE,UAACP,EAAD,WACGc,GACC,SAACZ,EAAD,CACE4B,IAAG,0CAAqChB,GACxCiB,IAAKrB,GAAQD,EACbuB,MAAM,WAGR,SAAC9B,EAAD,CACE4B,IAAI,mHACJC,IAAI,MACJC,MAAM,WAIV,4BACE,0BACGvB,GAASC,EADZ,KACwB,IAAIuB,KAAKtB,GAAcuB,cAD/C,QAIA,oCAAYtB,MACZ,uCACA,uBAAIC,KACJ,oCACA,uBAAIE,EAAOoB,KAAI,SAAAC,GAAK,OAAIA,EAAM1B,IAAV,IAAgB2B,KAAK,eAG7C,UAAClC,EAAD,YACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMwB,GAAE,kBAAavB,EAAb,SAAR,qBAEF,yBACE,SAAC,KAAD,CAAMuB,GAAE,kBAAavB,EAAb,YAAR,8BAKN,SAAC,KAAD,SAKT,C","sources":["components/movie-details/MovieDetails.styled.jsx","components/movie-details/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieSection = styled.div`\n  display: flex;\n  margin-top:15px;\n  border-bottom:2px solid gray\n`;\n\nexport const Img = styled.img`\nmargin-right:15px`\n\nexport const AdditionalSection = styled.div`\n  display: block;\n  margin-top:15px;\n  border-bottom:2px solid gray\n`;","import { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { MovieSection, Img, AdditionalSection } from './MovieDetails.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const {\n    title,\n    name,\n    release_date,\n    vote_average,\n    overview,\n    poster_path,\n    genres,\n  } = movie || [];\n\n  const location = useLocation();\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=730d0afac1800da4f45c404259e14f12&language=en-US`\n    )\n      .then(res => {\n        if (!res.ok) {\n          setMovie('badRequest');\n          throw new Error(res.status);\n        }\n        return res.json();\n      })\n      .then(data => {\n        setMovie(data);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={location.state?.from ?? '/'}>\n        <button>Go back</button>\n      </Link>\n      {movie === 'badRequest' && (\n        <Img\n          src=\"https://img.freepik.com/free-vector/oops-404-error-with-broken-robot-concept-illustration_114360-5529.jpg?w=2000\"\n          alt=\"404\"\n          width=\"300px\"\n        />\n      )}\n      {movie && movie !== 'badRequest' && (\n        <>\n          <MovieSection>\n            {poster_path ? (\n              <Img\n                src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                alt={name || title}\n                width=\"300px\"\n              />\n            ) : (\n              <Img\n                src=\"https://img.freepik.com/free-vector/oops-404-error-with-broken-robot-concept-illustration_114360-5529.jpg?w=2000\"\n                alt=\"404\"\n                width=\"300px\"\n              />\n            )}\n\n            <div>\n              <h1>\n                {title || name} &#40;{new Date(release_date).getFullYear()}&#41;\n              </h1>\n\n              <p>Rating: {vote_average}</p>\n              <h2>Overview </h2>\n              <p>{overview}</p>\n              <h3>Genres</h3>\n              <p>{genres.map(genre => genre.name).join(', ')}</p>\n            </div>\n          </MovieSection>\n          <AdditionalSection>\n            <p>Additional Information</p>\n            <ul>\n              <li>\n                <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n              </li>\n              <li>\n                <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n              </li>\n            </ul>\n          </AdditionalSection>\n\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n};\n\nMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      movieId: PropTypes.string,\n    }),\n  }),\n};\n\nexport default MovieDetails;\n"],"names":["MovieSection","styled","Img","AdditionalSection","movieId","useParams","useState","movie","setMovie","title","name","release_date","vote_average","overview","poster_path","genres","location","useLocation","useEffect","fetch","then","res","ok","Error","status","json","data","to","state","from","src","alt","width","Date","getFullYear","map","genre","join"],"sourceRoot":""}