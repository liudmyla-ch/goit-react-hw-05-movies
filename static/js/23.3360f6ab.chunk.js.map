{"version":3,"file":"static/js/23.3360f6ab.chunk.js","mappings":"mLA0CA,UAtCiB,WACf,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACRC,MAAM,sCAAD,OACmCN,EADnC,4EAEHO,MAAK,SAAAC,GAAG,OACRA,EAAIC,OAAOF,MAAK,SAAAG,GACdN,EAAWM,EAAKC,QACjB,GAHO,GAKX,GAAE,CAACX,KAGF,gCACsB,IAAnBG,EAAQS,SAAgB,oDACxBT,EAAQS,OAAS,IAChB,wBACGT,EAAQU,KAAI,SAAAC,GACX,IAAQC,EAAwBD,EAAxBC,OAAQC,EAAgBF,EAAhBE,QAASC,EAAOH,EAAPG,GACzB,OACE,2BACE,yBAAIF,EAAJ,OADF,KACmB,uBAAIC,MADdC,EAIZ,QAKV,C","sources":["components/reviews/Reviews.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\n const Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=730d0afac1800da4f45c404259e14f12&language=en-US&page=1`\n    ).then(res =>\n      res.json().then(data => {\n        setReviews(data.results);\n      })\n    );\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length === 0 && <p>There is nothing to view</p>}\n      {reviews.length > 0 && (\n        <ul>\n          {reviews.map(item => {\n            const { author, content, id } = item;\n            return (\n              <li key={id}>\n                <p>{author}:</p> <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\n\nReviews.propTypes = {\n  movieId: PropTypes.string,\n}\n\nexport default Reviews;\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetch","then","res","json","data","results","length","map","item","author","content","id"],"sourceRoot":""}